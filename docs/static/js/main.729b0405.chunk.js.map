{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,sBACAC,SAViB,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKd,SAEE,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCRhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATnB,kBAaZM,GAbY,4CAAH,sDCWPO,EAAc,SAAC,GAAkB,IAAjBb,EAAgB,EAAhBA,IAAKU,EAAW,EAAXA,MAC9B,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCXHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgB1C,OAVEC,qBAAU,WACRxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGd,CAACpB,IAECqB,EDbwBK,CAAa1B,GAAhCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAClB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEVzBgB,EAAe,WAAQ,IAAD,EACGzC,mBAAS,CAAC,SADb,mBAC1B0C,EAD0B,KACd3C,EADc,KAE/B,OACI,gCACI,iDACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEM2C,EAAWnB,KAAI,SAAAT,GACb,OACE,mCACE,cAAC,EAAD,CAAwBA,SAAYA,GAAtBA,c,MCXtC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.729b0405.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n      setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) =>{\r\n      e.preventDefault();\r\n      if(inputValue.trim().length > 2) {\r\n        setCategories(cats => [inputValue, ...cats]);\r\n        setInputValue('');\r\n      }\r\n    }\r\n\r\n    return (\r\n        <form\r\n        onSubmit={handleSubmit}>\r\n          <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          ></input>  \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=QSnymXN7I5DmS7gT896agMVCNw0DFTcG`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n      }\r\n    });\r\n\r\n    return gifs;\r\n  }","import React from 'react'\r\n\r\n// export const GifGridItem = (props) => {\r\n//     return (\r\n//         <div>\r\n//             <img src={props.img.url} alt={props.img.title} />\r\n//             <p>{props.img.title}</p>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport const GifGridItem = ({url, title}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n  const {data:images, loading} = useFetchGifs(category);\r\n    return (\r\n      <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n        <div className=\"card-grid\">\r\n            {\r\n              images.map(img => (\r\n                <GifGridItem key={img.id} {...img}/>\r\n              ))\r\n            }\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n      getGifs(category)\r\n      .then(imgs => {\r\n          setState({\r\n            data: imgs,\r\n            loading: false\r\n          })\r\n      })\r\n    }, [category]);\r\n\r\n  return state;\r\n}","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ()  => {\r\n  const [categories, setCategories] = useState(['Goku']);\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp...</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                  categories.map(category => {\r\n                    return (\r\n                      <>\r\n                        <GifGrid key={category} category = {category}/>\r\n                      </>\r\n                    )\r\n                  })\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}